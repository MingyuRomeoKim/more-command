<?php

namespace $$REPOSITORY_NAMESPACE$$;

use App\Models\$$MODEL_NAMESPACE$$;
use $$REPOSITORY_DEFAULT_NAMESPACE$$\BaseTemplate\BaseRepository;
use $$REPOSITORY_DEFAULT_NAMESPACE$$\BaseTemplate\RepositoryInterface;

class $$REPOSITORY_NAME$$ extends BaseRepository implements RepositoryInterface
{
    public function __construct($$MODEL_NAME$$ $model = null)
    {
        if($model == null) {
            $model = new $$MODEL_NAME$$();
        }
        parent::__construct($model);
    }

    public function findById($id, array $columns = ['*'], array $relations = [])
    {
        return parent::findById($id, $columns, $relations); // TODO: Change the autogenerated stub
    }

    public function all(array $columns = ['*'], array $relations = [])
    {
        return parent::all($columns, $relations); // TODO: Change the autogenerated stub
    }

    public function firstOrNew(array $attributes = [], array $values = [])
    {
        return parent::firstOrNew($attributes, $values); // TODO: Change the autogenerated stub
    }

    public function firstOrCreate(array $attributes = [], array $values = [])
    {
        return parent::firstOrCreate($attributes, $values); // TODO: Change the autogenerated stub
    }

    public function insert($arrItems)
    {
        return parent::insert($arrItems); // TODO: Change the autogenerated stub
    }

    public function create(array $attributes)
    {
        return parent::create($attributes); // TODO: Change the autogenerated stub
    }

    public function update($id, array $attributes)
    {
        return parent::update($id, $attributes); // TODO: Change the autogenerated stub
    }

    public function updateOrCreate(array $attributes, array $values = [])
    {
        return parent::updateOrCreate($attributes, $values); // TODO: Change the autogenerated stub
    }

    public function delete($ids)
    {
        return parent::delete($ids); // TODO: Change the autogenerated stub
    }

}